// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.routeguide";
//option java_outer_classname = "RouteGuideProto";

package protos;
import "google/protobuf/timestamp.proto";

// Interface exported by the server.
service Peer {
  rpc Chat(stream OkMessage) returns (stream OkMessage) {}
}

message OkMessage {
  enum Type {
    UNDEFINED = 0;

    DISC_HELLO = 1;
    DISC_DISCONNECT = 2;
    DISC_GET_PEERS = 3;
    DISC_PEERS = 4;
    DISC_NEWMSG = 5;

    CHAIN_TRANSACTION = 6;

    SYNC_GET_BLOCKS = 11;
    SYNC_BLOCKS = 12;
    SYNC_BLOCK_ADDED = 13;

    SYNC_STATE_GET_SNAPSHOT = 14;
    SYNC_STATE_SNAPSHOT = 15;
    SYNC_STATE_GET_DELTAS = 16;
    SYNC_STATE_DELTAS = 17;

    RESPONSE = 20;
    CONSENSUS = 21;
  }
  Type type = 1;
  google.protobuf.Timestamp timestamp = 2;
  bytes payload = 3;
  bytes signature = 4;
}

message PeerAddress {
    string host = 1;
    int32 port = 2;
}

message PeerID {
    string name = 1;
}

message PeerEndpoint {
    string ID = 1;
    string address = 2;
    enum Type {
        UNDEFINED = 0;
        VALIDATOR = 1;
        NON_VALIDATOR = 2;
    }
    Type type = 3;
}

message PeersMessage {
    repeated PeerEndpoint peers = 1;
}

message PeersAddresses {
    repeated string addresses = 1;
}

message HelloMessage {
    PeerEndpoint endpoint = 1;
}

message TXOutput {
    uint64 Value = 1;
    bytes  PubKeyHash = 2;
}

message TXInput {
    bytes  Txid = 1;
    uint64 Vout = 2;
    bytes  Signature = 3;
    bytes  PubKey = 4;
}

message Transaction {
    bytes  ID = 1;
    repeated TXInput Vin = 2;
    repeated TXOutput Vout = 3;
}


message Block {
    uint32 version = 1;
    google.protobuf.Timestamp Timestamp = 2;
    repeated Transaction Transactions = 3;
    bytes PrevBlockHash = 4;
    bytes Hash = 5;
    uint64 Nonce = 6;
    uint64 Height = 7;
    bytes StateHash = 8;
}
